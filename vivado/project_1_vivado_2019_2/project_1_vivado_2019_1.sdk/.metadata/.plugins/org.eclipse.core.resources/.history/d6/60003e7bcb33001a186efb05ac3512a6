/*
 * GereMoteur.cpp
 *
 *  Created on: 6 janv. 2020
 *      Author: nicolas
 */

#include "GereMoteur.h"

#include "MonPWM.h"

GereMoteur::GereMoteur() {
	//PWM_Get_Period(44);
}

GereMoteur::~GereMoteur() {
	// TODO Auto-generated destructor stub
}

void GereMoteur::PWM_Set_Period( u32 clocks)
{
	Xil_Out32(baseAddr + PWM_AXI_PERIOD_REG_OFFSET, clocks);
}

void GereMoteur::PWM_Set_Duty( u32 clocks, u32 pwmIndex)
{
	Xil_Out32(baseAddr + PWM_AXI_DUTY_REG_OFFSET + (4*pwmIndex), clocks);
}

u32 GereMoteur::PWM_Get_Period()
{
	return Xil_In32(baseAddr + PWM_AXI_PERIOD_REG_OFFSET);
}

u32 GereMoteur::PWM_Get_Duty( u32 pwmIndex)
{
	return Xil_In32(baseAddr + PWM_AXI_DUTY_REG_OFFSET + (4*pwmIndex));
}

void GereMoteur::PWM_Enable()
{
	Xil_Out32(baseAddr + PWM_AXI_CTRL_REG_OFFSET, 1);
}

void GereMoteur::PWM_Disable()
{
	Xil_Out32(baseAddr + PWM_AXI_CTRL_REG_OFFSET, 0);
}
void GereMoteur::setBaseAddr(u32 aa){
	this->baseAddr = aa;
}
void GereMoteur::handler(){
	lapause(0);
}
