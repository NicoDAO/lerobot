/*
 * Uart.h
 *
 *  Created on: 5 ao√ªt 2018
 *      Author: nicolas
 */

#ifndef SRC_UART_H_
#define SRC_UART_H_

#include "xuartps.h"
#include "xil_exception.h"
#include "xil_printf.h"

#ifdef XPAR_INTC_0_DEVICE_ID
#include "xintc.h"
#else
#include "xscugic.h"
#endif

/************************** Constant Definitions **************************/

/*
 * The following constants map to the XPAR parameters created in the
 * xparameters.h file. They are defined here such that a user can easily
 * change all the needed parameters in one place.
 */
#ifdef XPAR_INTC_0_DEVICE_ID
#define INTC		XIntc
#define UART_DEVICE_ID		XPAR_XUARTPS_0_DEVICE_ID
#define INTC_DEVICE_ID		XPAR_INTC_0_DEVICE_ID
#define UART_INT_IRQ_ID		XPAR_INTC_0_UARTPS_0_VEC_ID
#else
#define INTC		XScuGic
#define UART_DEVICE_ID		XPAR_XUARTPS_0_DEVICE_ID
#define INTC_DEVICE_ID		XPAR_SCUGIC_SINGLE_DEVICE_ID
#define UART_INT_IRQ_ID		XPAR_XUARTPS_1_INTR
#endif

class LUart: public Liaison {
public:
	LUart();
	virtual ~LUart();
	int configure();
	int envoie(u8 *, int);
	int recoit(u8 *, int);
	int setBaudrate(int);
	int setXUartPs(XUartPs*);
	INTC InterruptController; /* Instance of the Interrupt Controller */

	//XScuGic InterruptController; /* Instance of the Interrupt Controller */
	static void Handler(void *pvNotUsed);
	int SetupInterruptSystem(INTC *, XUartPs *UartInstancePtr,
			u16 UartIntrId);
private:
	int bdr = 0;
	int SentCount = 0;
	int Status;
	XUartPs_Config *Config;

};

#endif /* SRC_UART_H_ */
